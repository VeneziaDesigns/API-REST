{"ast":null,"code":"//Importamos FormGroup, FormBuilder y Validators\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction TarjetaCreditoComponent_tr_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵelement(8, \"i\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵelement(10, \"i\", 27);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tarjeta_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tarjeta_r1.titular);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tarjeta_r1.numeroTarjeta);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tarjeta_r1.fechaExpiracion);\n  }\n}\nexport class TarjetaCreditoComponent {\n  constructor(fb) {\n    this.fb = fb;\n    //Creamos array de objetos para iterarlo\n    this.listTarjetas = [{\n      titular: 'Juan Perez',\n      numeroTarjeta: '1565478954983012',\n      fechaExpiracion: '11/12',\n      cvv: '889'\n    }, {\n      titular: 'Miguel Sanchez',\n      numeroTarjeta: '1203564897564123',\n      fechaExpiracion: '09/18',\n      cvv: '513'\n    }];\n    this.form = this.fb.group({\n      //Agregamos las validaciones\n      titular: ['', Validators.required],\n      //Si es mas de 1 validacion debe ir entre corchetes\n      numeroTarjeta: ['', [Validators.required, Validators.maxLength(16), Validators.minLength(16)]],\n      fechaExpiracion: ['', [Validators.required, Validators.maxLength(5), Validators.minLength(5)]],\n      cvv: ['', [Validators.required, Validators.maxLength(3), Validators.minLength(3)]]\n    });\n  }\n  ngOnInit() {}\n  agregarTarjeta() {\n    const tarjeta = {\n      titular: this.form.get('titular')?.value,\n      numeroTarjeta: this.form.get('numeroTarjeta')?.value,\n      fechaExpiracion: this.form.get('fechaExpiracion')?.value,\n      cvv: this.form.get('cvv')?.value\n    };\n    this.listTarjetas.push(tarjeta);\n    this.form.reset();\n  }\n}\nTarjetaCreditoComponent.ɵfac = function TarjetaCreditoComponent_Factory(t) {\n  return new (t || TarjetaCreditoComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nTarjetaCreditoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TarjetaCreditoComponent,\n  selectors: [[\"app-tarjeta-credito\"]],\n  decls: 45,\n  vars: 18,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"row\"], [1, \"col-lg-8\", \"offset-lg-2\"], [1, \"card\"], [1, \"card-body\"], [1, \"titulo\"], [1, \"row\", \"mt-4\"], [1, \"col-lg-6\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"input-group\", \"input-group-lg\", \"mb-3\"], [1, \"input-group-text\"], [1, \"fa-solid\", \"fa-user\"], [\"formControlName\", \"titular\", \"type\", \"text\", \"placeholder\", \"Titular\", 1, \"form-control\"], [1, \"fa-solid\", \"fa-credit-card\"], [\"formControlName\", \"numeroTarjeta\", \"type\", \"text\", \"placeholder\", \"Numero de tarjeta\", 1, \"form-control\"], [1, \"col-lg-7\"], [1, \"fa-solid\", \"fa-calendar-days\"], [\"formControlName\", \"fechaExpiracion\", \"type\", \"text\", \"placeholder\", \"MM/YY\", 1, \"form-control\"], [1, \"col-lg-5\"], [1, \"fa-solid\", \"fa-key\"], [\"formControlName\", \"cvv\", \"type\", \"password\", \"placeholder\", \"CVV\", 1, \"form-control\"], [1, \"d-grid\", \"gap-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"btn-lg\"], [1, \"fa-solid\", \"fa-database\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"far\", \"fa-solid\", \"fa-pen-to-square\", \"text-info\"], [1, \"far\", \"fa-sharp\", \"fa-solid\", \"fa-trash\", \"text-danger\"]],\n  template: function TarjetaCreditoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h3\", 5);\n      i0.ɵɵtext(6, \"TARJETA CREDITO\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7)(9, \"div\", 3)(10, \"div\", 4)(11, \"h5\", 5);\n      i0.ɵɵtext(12, \"AGREGAR TARJETA\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"form\", 8);\n      i0.ɵɵlistener(\"ngSubmit\", function TarjetaCreditoComponent_Template_form_ngSubmit_13_listener() {\n        return ctx.agregarTarjeta();\n      });\n      i0.ɵɵelementStart(14, \"div\", 9)(15, \"span\", 10);\n      i0.ɵɵelement(16, \"i\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 9)(19, \"span\", 10);\n      i0.ɵɵelement(20, \"i\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 1)(23, \"div\", 15)(24, \"div\", 9)(25, \"span\", 10);\n      i0.ɵɵelement(26, \"i\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 18)(29, \"div\", 9)(30, \"span\", 10);\n      i0.ɵɵelement(31, \"i\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"input\", 20);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(33, \"div\", 21)(34, \"button\", 22);\n      i0.ɵɵelement(35, \"i\", 23);\n      i0.ɵɵtext(36, \"\\u00A0 Aceptar\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(37, \"div\", 7)(38, \"div\", 3)(39, \"div\", 4)(40, \"h5\", 5);\n      i0.ɵɵtext(41, \"LISTADO DE TARJETAS\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"table\", 24)(43, \"tbody\");\n      i0.ɵɵtemplate(44, TarjetaCreditoComponent_tr_44_Template, 11, 3, \"tr\", 25);\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      let tmp_6_0;\n      let tmp_7_0;\n      let tmp_8_0;\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(3);\n      i0.ɵɵclassProp(\"green-icon\", (tmp_1_0 = ctx.form.get(\"titular\")) == null ? null : tmp_1_0.valid)(\"red-icon\", ((tmp_2_0 = ctx.form.get(\"titular\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.form.get(\"titular\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassProp(\"green-icon\", (tmp_3_0 = ctx.form.get(\"numeroTarjeta\")) == null ? null : tmp_3_0.valid)(\"red-icon\", ((tmp_4_0 = ctx.form.get(\"numeroTarjeta\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.form.get(\"numeroTarjeta\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"green-icon\", (tmp_5_0 = ctx.form.get(\"fechaExpiracion\")) == null ? null : tmp_5_0.valid)(\"red-icon\", ((tmp_6_0 = ctx.form.get(\"fechaExpiracion\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.form.get(\"fechaExpiracion\")) == null ? null : tmp_6_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵclassProp(\"green-icon\", (tmp_7_0 = ctx.form.get(\"cvv\")) == null ? null : tmp_7_0.valid)(\"red-icon\", ((tmp_8_0 = ctx.form.get(\"cvv\")) == null ? null : tmp_8_0.invalid) && ((tmp_8_0 = ctx.form.get(\"cvv\")) == null ? null : tmp_8_0.touched));\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listTarjetas);\n    }\n  },\n  dependencies: [i2.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".far[_ngcontent-%COMP%] {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.green-icon[_ngcontent-%COMP%] {\\r\\n    color: #198754;\\r\\n}\\r\\n\\r\\n.red-icon[_ngcontent-%COMP%] {\\r\\n    color: #dc3545;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXJqZXRhLWNyZWRpdG8vdGFyamV0YS1jcmVkaXRvLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyIuZmFyIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmdyZWVuLWljb24ge1xyXG4gICAgY29sb3I6ICMxOTg3NTQ7XHJcbn1cclxuXHJcbi5yZWQtaWNvbiB7XHJcbiAgICBjb2xvcjogI2RjMzU0NTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","TarjetaCreditoComponent","constructor","fb","titular","numeroTarjeta","fechaExpiracion","cvv","form","group","required","maxLength","minLength","ngOnInit","agregarTarjeta","tarjeta","get","value","listTarjetas","push","reset","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\trito\\Desktop\\Angular Proyects\\FETarjetaCredito\\src\\app\\components\\tarjeta-credito\\tarjeta-credito.component.ts","C:\\Users\\trito\\Desktop\\Angular Proyects\\FETarjetaCredito\\src\\app\\components\\tarjeta-credito\\tarjeta-credito.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n//Importamos FormGroup, FormBuilder y Validators\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  //Nombre que tenemos que poner en app-ComponentFactoryResolver.html para que lo renderice\n  selector: 'app-tarjeta-credito',\n  templateUrl: './tarjeta-credito.component.html',\n  styleUrls: ['./tarjeta-credito.component.css']\n})\nexport class TarjetaCreditoComponent {\n  //Creamos array de objetos para iterarlo\n  listTarjetas: any[] = [\n    { titular:'Juan Perez', numeroTarjeta: '1565478954983012', fechaExpiracion: '11/12', cvv: '889' },\n    { titular:'Miguel Sanchez', numeroTarjeta: '1203564897564123', fechaExpiracion: '09/18', cvv: '513' },\n  ];\n\n  //Creamos una nuevaa varialble de tipo FormGroup\n  form: FormGroup;\n\n  constructor(private fb:FormBuilder) {\n    this.form = this.fb.group({\n  //Agregamos las validaciones\n      titular: ['', Validators.required],\n  //Si es mas de 1 validacion debe ir entre corchetes\n      numeroTarjeta: ['', [Validators.required, Validators.maxLength(16), Validators.minLength(16)]],\n      fechaExpiracion: ['', [Validators.required, Validators.maxLength(5), Validators.minLength(5)]],\n      cvv: ['', [Validators.required, Validators.maxLength(3), Validators.minLength(3)]]\n  })\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  agregarTarjeta() {\n\n    const tarjeta: any = {\n      titular: this.form.get('titular')?.value,\n      numeroTarjeta: this.form.get('numeroTarjeta')?.value,\n      fechaExpiracion: this.form.get('fechaExpiracion')?.value,\n      cvv: this.form.get('cvv')?.value\n    }\n    this.listTarjetas.push(tarjeta);\n    this.form.reset();\n  }\n}\n","<div class=\"container mt-5\">\n    <div class=\"row\">\n        <div class=\"col-lg-8 offset-lg-2\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h3 class=\"titulo\">TARJETA CREDITO</h3>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row mt-4\">\n        <div class=\"col-lg-6\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h5 class=\"titulo\">AGREGAR TARJETA</h5>\n        <!--Vinculamos el formulario html con el constructor form y le agregamos una funcion-->\n                    <form [formGroup]=\"form\" (ngSubmit)=\"agregarTarjeta()\">\n                        <div class=\"input-group input-group-lg mb-3\">\n                            <span class=\"input-group-text\">\n                                <i class=\"fa-solid fa-user\"\n                                [class.green-icon]=\"this.form.get('titular')?.valid\"\n                                [class.red-icon]=\"this.form.get('titular')?.invalid && this.form.get('titular')?.touched\"></i>\n                        <!--Le decimos que use la clase green-icon cuando sea valido => pase las validaciones\n                        y la clase red-icon cuando sea invalido y haya sido tocado-->\n                            </span>\n                            <input formControlName=\"titular\" type=\"text\" class=\"form-control\" placeholder=\"Titular\">\n                        </div>\n                        <div class=\"input-group input-group-lg mb-3\">\n                            <span class=\"input-group-text\">\n                                <i class=\"fa-solid fa-credit-card\"\n                                [class.green-icon]=\"this.form.get('numeroTarjeta')?.valid\"\n                                [class.red-icon]=\"this.form.get('numeroTarjeta')?.invalid && this.form.get('numeroTarjeta')?.touched\"></i>\n                            </span>\n                            <input formControlName=\"numeroTarjeta\" type=\"text\" class=\"form-control\" placeholder=\"Numero de tarjeta\">\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-lg-7\">\n                                <div class=\"input-group input-group-lg mb-3\">\n                                    <span class=\"input-group-text\">\n                                        <i class=\"fa-solid fa-calendar-days\"\n                                        [class.green-icon]=\"this.form.get('fechaExpiracion')?.valid\"\n                                        [class.red-icon]=\"this.form.get('fechaExpiracion')?.invalid && this.form.get('fechaExpiracion')?.touched\"></i>\n                                    </span>\n                                    <input formControlName=\"fechaExpiracion\" type=\"text\" class=\"form-control\" placeholder=\"MM/YY\">\n                                </div>\n                            </div>\n                            <div class=\"col-lg-5\">\n                                <div class=\"input-group input-group-lg mb-3\">\n                                    <span class=\"input-group-text\">\n                                        <i class=\"fa-solid fa-key\"\n                                        [class.green-icon]=\"this.form.get('cvv')?.valid\"\n                                        [class.red-icon]=\"this.form.get('cvv')?.invalid && this.form.get('cvv')?.touched\"></i>\n                                    </span>\n                                    <input formControlName=\"cvv\" type=\"password\" class=\"form-control\" placeholder=\"CVV\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"d-grid gap-2\">\n                            <button type=\"submit\" class=\"btn btn-success btn-lg\">\n                                <i class=\"fa-solid fa-database\"></i>&nbsp; Aceptar</button>                                \n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-6\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h5 class=\"titulo\">LISTADO DE TARJETAS</h5>\n                    <table class=\"table\">\n                        <tbody>\n                            <!--Iteramos directamente en la etiqueta tr-->\n                            <tr *ngFor=\"let tarjeta of listTarjetas\">\n                                <td>{{ tarjeta.titular }}</td>\n                                <td>{{ tarjeta.numeroTarjeta }}</td>\n                                <td>{{ tarjeta.fechaExpiracion }}</td>\n                                <td>\n                                    <i class=\"far fa-solid fa-pen-to-square text-info\"></i>\n                                </td>\n                                <td>\n                                    <i class=\"far fa-sharp fa-solid fa-trash text-danger\"></i>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}